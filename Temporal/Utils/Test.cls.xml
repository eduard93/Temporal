<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Temporal.Utils.Test">
<Description>
Populate Test package with data</Description>
<Abstract>1</Abstract>
<TimeCreated>64316,5440.681287</TimeCreated>

<Method name="Populate">
<Description>
do ##class(Temporal.Utils.Test).Populate(10)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>count=1000000,cycles=10,rebuild:%Boolean=$$$YES</FormalSpec>
<Implementation><![CDATA[
	set classList = $lb("Temporal.Test.Person", "Temporal.Test.Department", "Temporal.Test.Document")
	
	if rebuild {
		for i=1:1:$ll(classList) {
			set class = $lg(classList, i)
			do $classmethod(class, "KillExtent")
		}
	}
	
	for i=1:1:$ll(classList) {
		set class = $lg(classList, i)
		do $classmethod(class, "massAdd", count)
	}
	
	for j=1:1:cycles {
		for i=1:1:$ll(classList) {
			set class = $lg(classList, i)
			do $classmethod(class, "massAllUpd", 1)
		}
	}
]]></Implementation>
</Method>

<Method name="PopulateJob">
<Description>
do ##class(Temporal.Utils.Test).PopulateJob()</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>count=1000000,jobs:%Integer=4,rebuild:%Boolean=$$$YES</FormalSpec>
<Implementation><![CDATA[
	
	do:rebuild ##class(Temporal.Test.Person).KillExtent()
	
	set chunk = count\jobs
	
	set timeStart=$p($h,",",2)
	for i=1:1:(jobs) {
		job ##class(Temporal.Test.Person).massAdd(chunk)
	}
	
	for i=1:1:jobs { 
 		do $system.Event.Wait()
 	}

	set timeEnd=$p($h,",",2)
	write !,"Time: ", timeEnd - timeStart, !
]]></Implementation>
</Method>
</Class>
</Export>
